/*
 * generated by Xtext
 */
grammar InternalUseCase;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package com.alma.djynx.usecase.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package com.alma.djynx.usecase.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import com.alma.djynx.usecase.services.UseCaseGrammarAccess;

}

@parser::members {
 
 	private UseCaseGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(UseCaseGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleUseCase
entryRuleUseCase 
:
{ before(grammarAccess.getUseCaseRule()); }
	 ruleUseCase
{ after(grammarAccess.getUseCaseRule()); } 
	 EOF 
;

// Rule UseCase
ruleUseCase
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUseCaseAccess().getGroup()); }
(rule__UseCase__Group__0)
{ after(grammarAccess.getUseCaseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSubsystem
entryRuleSubsystem 
:
{ before(grammarAccess.getSubsystemRule()); }
	 ruleSubsystem
{ after(grammarAccess.getSubsystemRule()); } 
	 EOF 
;

// Rule Subsystem
ruleSubsystem
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubsystemAccess().getGroup()); }
(rule__Subsystem__Group__0)
{ after(grammarAccess.getSubsystemAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCase
entryRuleCase 
:
{ before(grammarAccess.getCaseRule()); }
	 ruleCase
{ after(grammarAccess.getCaseRule()); } 
	 EOF 
;

// Rule Case
ruleCase
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCaseAccess().getGroup()); }
(rule__Case__Group__0)
{ after(grammarAccess.getCaseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExtensionPoint
entryRuleExtensionPoint 
:
{ before(grammarAccess.getExtensionPointRule()); }
	 ruleExtensionPoint
{ after(grammarAccess.getExtensionPointRule()); } 
	 EOF 
;

// Rule ExtensionPoint
ruleExtensionPoint
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExtensionPointAccess().getGroup()); }
(rule__ExtensionPoint__Group__0)
{ after(grammarAccess.getExtensionPointAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIncludes
entryRuleIncludes 
:
{ before(grammarAccess.getIncludesRule()); }
	 ruleIncludes
{ after(grammarAccess.getIncludesRule()); } 
	 EOF 
;

// Rule Includes
ruleIncludes
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIncludesAccess().getGroup()); }
(rule__Includes__Group__0)
{ after(grammarAccess.getIncludesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExtends
entryRuleExtends 
:
{ before(grammarAccess.getExtendsRule()); }
	 ruleExtends
{ after(grammarAccess.getExtendsRule()); } 
	 EOF 
;

// Rule Extends
ruleExtends
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExtendsAccess().getGroup()); }
(rule__Extends__Group__0)
{ after(grammarAccess.getExtendsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActor
entryRuleActor 
:
{ before(grammarAccess.getActorRule()); }
	 ruleActor
{ after(grammarAccess.getActorRule()); } 
	 EOF 
;

// Rule Actor
ruleActor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActorAccess().getGroup()); }
(rule__Actor__Group__0)
{ after(grammarAccess.getActorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInheritance
entryRuleInheritance 
:
{ before(grammarAccess.getInheritanceRule()); }
	 ruleInheritance
{ after(grammarAccess.getInheritanceRule()); } 
	 EOF 
;

// Rule Inheritance
ruleInheritance
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInheritanceAccess().getGroup()); }
(rule__Inheritance__Group__0)
{ after(grammarAccess.getInheritanceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUses
entryRuleUses 
:
{ before(grammarAccess.getUsesRule()); }
	 ruleUses
{ after(grammarAccess.getUsesRule()); } 
	 EOF 
;

// Rule Uses
ruleUses
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUsesAccess().getGroup()); }
(rule__Uses__Group__0)
{ after(grammarAccess.getUsesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultiplicity
entryRuleMultiplicity 
:
{ before(grammarAccess.getMultiplicityRule()); }
	 ruleMultiplicity
{ after(grammarAccess.getMultiplicityRule()); } 
	 EOF 
;

// Rule Multiplicity
ruleMultiplicity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultiplicityAccess().getAlternatives()); }
(rule__Multiplicity__Alternatives)
{ after(grammarAccess.getMultiplicityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumber
entryRuleNumber 
:
{ before(grammarAccess.getNumberRule()); }
	 ruleNumber
{ after(grammarAccess.getNumberRule()); } 
	 EOF 
;

// Rule Number
ruleNumber
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumberAccess().getAlternatives()); }
(rule__Number__Alternatives)*
{ after(grammarAccess.getNumberAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStar
entryRuleStar 
:
{ before(grammarAccess.getStarRule()); }
	 ruleStar
{ after(grammarAccess.getStarRule()); } 
	 EOF 
;

// Rule Star
ruleStar
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStarAccess().getAsteriskKeyword()); }

	'*' 

{ after(grammarAccess.getStarAccess().getAsteriskKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Multiplicity__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityAccess().getGroup_0()); }
(rule__Multiplicity__Group_0__0)
{ after(grammarAccess.getMultiplicityAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getMultiplicityAccess().getGroup_1()); }
(rule__Multiplicity__Group_1__0)
{ after(grammarAccess.getMultiplicityAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityAccess().getGroup_1_1_0()); }
(rule__Multiplicity__Group_1_1_0__0)
{ after(grammarAccess.getMultiplicityAccess().getGroup_1_1_0()); }
)

    |(
{ before(grammarAccess.getMultiplicityAccess().getStarParserRuleCall_1_1_1()); }
	ruleStar
{ after(grammarAccess.getMultiplicityAccess().getStarParserRuleCall_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getDigitZeroKeyword_0()); }

	'0' 

{ after(grammarAccess.getNumberAccess().getDigitZeroKeyword_0()); }
)

    |(
{ before(grammarAccess.getNumberAccess().getDigitOneKeyword_1()); }

	'1' 

{ after(grammarAccess.getNumberAccess().getDigitOneKeyword_1()); }
)

    |(
{ before(grammarAccess.getNumberAccess().getDigitTwoKeyword_2()); }

	'2' 

{ after(grammarAccess.getNumberAccess().getDigitTwoKeyword_2()); }
)

    |(
{ before(grammarAccess.getNumberAccess().getDigitThreeKeyword_3()); }

	'3' 

{ after(grammarAccess.getNumberAccess().getDigitThreeKeyword_3()); }
)

    |(
{ before(grammarAccess.getNumberAccess().getDigitFourKeyword_4()); }

	'4' 

{ after(grammarAccess.getNumberAccess().getDigitFourKeyword_4()); }
)

    |(
{ before(grammarAccess.getNumberAccess().getDigitFiveKeyword_5()); }

	'5' 

{ after(grammarAccess.getNumberAccess().getDigitFiveKeyword_5()); }
)

    |(
{ before(grammarAccess.getNumberAccess().getDigitSixKeyword_6()); }

	'6' 

{ after(grammarAccess.getNumberAccess().getDigitSixKeyword_6()); }
)

    |(
{ before(grammarAccess.getNumberAccess().getDigitSevenKeyword_7()); }

	'7' 

{ after(grammarAccess.getNumberAccess().getDigitSevenKeyword_7()); }
)

    |(
{ before(grammarAccess.getNumberAccess().getDigitEightKeyword_8()); }

	'8' 

{ after(grammarAccess.getNumberAccess().getDigitEightKeyword_8()); }
)

    |(
{ before(grammarAccess.getNumberAccess().getDigitNineKeyword_9()); }

	'9' 

{ after(grammarAccess.getNumberAccess().getDigitNineKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__UseCase__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseCase__Group__0__Impl
	rule__UseCase__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseCaseAccess().getSystemsAssignment_0()); }
(rule__UseCase__SystemsAssignment_0)*
{ after(grammarAccess.getUseCaseAccess().getSystemsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UseCase__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseCase__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseCaseAccess().getActorsAssignment_1()); }
(rule__UseCase__ActorsAssignment_1)*
{ after(grammarAccess.getUseCaseAccess().getActorsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Subsystem__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subsystem__Group__0__Impl
	rule__Subsystem__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Subsystem__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubsystemAccess().getSubsystemKeyword_0()); }

	'Subsystem: ' 

{ after(grammarAccess.getSubsystemAccess().getSubsystemKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Subsystem__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subsystem__Group__1__Impl
	rule__Subsystem__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Subsystem__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubsystemAccess().getNameAssignment_1()); }
(rule__Subsystem__NameAssignment_1)
{ after(grammarAccess.getSubsystemAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Subsystem__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subsystem__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Subsystem__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubsystemAccess().getCasesAssignment_2()); }
(rule__Subsystem__CasesAssignment_2)*
{ after(grammarAccess.getSubsystemAccess().getCasesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Case__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group__0__Impl
	rule__Case__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getCaseKeyword_0()); }

	'Case: ' 

{ after(grammarAccess.getCaseAccess().getCaseKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Case__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group__1__Impl
	rule__Case__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getNameAssignment_1()); }
(rule__Case__NameAssignment_1)
{ after(grammarAccess.getCaseAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Case__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group__2__Impl
	rule__Case__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getExtensionsAssignment_2()); }
(rule__Case__ExtensionsAssignment_2)*
{ after(grammarAccess.getCaseAccess().getExtensionsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Case__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group__3__Impl
	rule__Case__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getIncludesAssignment_3()); }
(rule__Case__IncludesAssignment_3)*
{ after(grammarAccess.getCaseAccess().getIncludesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Case__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getExtendsAssignment_4()); }
(rule__Case__ExtendsAssignment_4)*
{ after(grammarAccess.getCaseAccess().getExtendsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ExtensionPoint__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtensionPoint__Group__0__Impl
	rule__ExtensionPoint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionPoint__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtensionPointAccess().getExtensionPointKeyword_0()); }

	'ExtensionPoint: ' 

{ after(grammarAccess.getExtensionPointAccess().getExtensionPointKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExtensionPoint__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtensionPoint__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionPoint__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtensionPointAccess().getNameAssignment_1()); }
(rule__ExtensionPoint__NameAssignment_1)
{ after(grammarAccess.getExtensionPointAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Includes__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Includes__Group__0__Impl
	rule__Includes__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Includes__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludesAccess().getIncludesKeyword_0()); }

	'Includes: ' 

{ after(grammarAccess.getIncludesAccess().getIncludesKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Includes__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Includes__Group__1__Impl
	rule__Includes__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Includes__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludesAccess().getNameAssignment_1()); }
(rule__Includes__NameAssignment_1)
{ after(grammarAccess.getIncludesAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Includes__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Includes__Group__2__Impl
	rule__Includes__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Includes__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludesAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getIncludesAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Includes__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Includes__Group__3__Impl
	rule__Includes__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Includes__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludesAccess().getRulesAssignment_3()); }
(rule__Includes__RulesAssignment_3)*
{ after(grammarAccess.getIncludesAccess().getRulesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Includes__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Includes__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Includes__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludesAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getIncludesAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Extends__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Extends__Group__0__Impl
	rule__Extends__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Extends__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendsAccess().getExtendsKeyword_0()); }

	'Extends: ' 

{ after(grammarAccess.getExtendsAccess().getExtendsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Extends__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Extends__Group__1__Impl
	rule__Extends__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Extends__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendsAccess().getNameAssignment_1()); }
(rule__Extends__NameAssignment_1)
{ after(grammarAccess.getExtendsAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Extends__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Extends__Group__2__Impl
	rule__Extends__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Extends__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendsAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getExtendsAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Extends__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Extends__Group__3__Impl
	rule__Extends__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Extends__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendsAccess().getRulesAssignment_3()); }
(rule__Extends__RulesAssignment_3)*
{ after(grammarAccess.getExtendsAccess().getRulesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Extends__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Extends__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Extends__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendsAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getExtendsAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Actor__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Actor__Group__0__Impl
	rule__Actor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getActorKeyword_0()); }

	'Actor: ' 

{ after(grammarAccess.getActorAccess().getActorKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Actor__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Actor__Group__1__Impl
	rule__Actor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getNameAssignment_1()); }
(rule__Actor__NameAssignment_1)
{ after(grammarAccess.getActorAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Actor__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Actor__Group__2__Impl
	rule__Actor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getInheritancesAssignment_2()); }
(rule__Actor__InheritancesAssignment_2)*
{ after(grammarAccess.getActorAccess().getInheritancesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Actor__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Actor__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getUsesAssignment_3()); }
(rule__Actor__UsesAssignment_3)*
{ after(grammarAccess.getActorAccess().getUsesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Inheritance__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Inheritance__Group__0__Impl
	rule__Inheritance__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inheritance__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInheritanceAccess().getExtendsKeyword_0()); }

	'Extends: ' 

{ after(grammarAccess.getInheritanceAccess().getExtendsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Inheritance__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Inheritance__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inheritance__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInheritanceAccess().getNameAssignment_1()); }
(rule__Inheritance__NameAssignment_1)
{ after(grammarAccess.getInheritanceAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Uses__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Uses__Group__0__Impl
	rule__Uses__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Uses__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsesAccess().getUsesKeyword_0()); }

	'Uses: ' 

{ after(grammarAccess.getUsesAccess().getUsesKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Uses__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Uses__Group__1__Impl
	rule__Uses__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Uses__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsesAccess().getNameAssignment_1()); }
(rule__Uses__NameAssignment_1)
{ after(grammarAccess.getUsesAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Uses__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Uses__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Uses__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsesAccess().getMultiplicityAssignment_2()); }
(rule__Uses__MultiplicityAssignment_2)?
{ after(grammarAccess.getUsesAccess().getMultiplicityAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Multiplicity__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplicity__Group_0__0__Impl
	rule__Multiplicity__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityAccess().getLeftCurlyBracketKeyword_0_0()); }

	'{' 

{ after(grammarAccess.getMultiplicityAccess().getLeftCurlyBracketKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplicity__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplicity__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityAccess().getNumberParserRuleCall_0_1()); }
	ruleNumber
{ after(grammarAccess.getMultiplicityAccess().getNumberParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Multiplicity__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplicity__Group_1__0__Impl
	rule__Multiplicity__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityAccess().getStarParserRuleCall_1_0()); }
	ruleStar
{ after(grammarAccess.getMultiplicityAccess().getStarParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplicity__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplicity__Group_1__1__Impl
	rule__Multiplicity__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityAccess().getAlternatives_1_1()); }
(rule__Multiplicity__Alternatives_1_1)?
{ after(grammarAccess.getMultiplicityAccess().getAlternatives_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplicity__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplicity__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityAccess().getRightCurlyBracketKeyword_1_2()); }

	'}' 

{ after(grammarAccess.getMultiplicityAccess().getRightCurlyBracketKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Multiplicity__Group_1_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplicity__Group_1_1_0__0__Impl
	rule__Multiplicity__Group_1_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group_1_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityAccess().getCommaKeyword_1_1_0_0()); }

	',' 

{ after(grammarAccess.getMultiplicityAccess().getCommaKeyword_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplicity__Group_1_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplicity__Group_1_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group_1_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityAccess().getNumberParserRuleCall_1_1_0_1()); }
	ruleNumber
{ after(grammarAccess.getMultiplicityAccess().getNumberParserRuleCall_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__UseCase__SystemsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseCaseAccess().getSystemsSubsystemParserRuleCall_0_0()); }
	ruleSubsystem{ after(grammarAccess.getUseCaseAccess().getSystemsSubsystemParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__ActorsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseCaseAccess().getActorsActorParserRuleCall_1_0()); }
	ruleActor{ after(grammarAccess.getUseCaseAccess().getActorsActorParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Subsystem__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubsystemAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getSubsystemAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Subsystem__CasesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubsystemAccess().getCasesCaseParserRuleCall_2_0()); }
	ruleCase{ after(grammarAccess.getSubsystemAccess().getCasesCaseParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Case__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getCaseAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Case__ExtensionsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getExtensionsExtensionPointParserRuleCall_2_0()); }
	ruleExtensionPoint{ after(grammarAccess.getCaseAccess().getExtensionsExtensionPointParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Case__IncludesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getIncludesIncludesParserRuleCall_3_0()); }
	ruleIncludes{ after(grammarAccess.getCaseAccess().getIncludesIncludesParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Case__ExtendsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getExtendsExtendsParserRuleCall_4_0()); }
	ruleExtends{ after(grammarAccess.getCaseAccess().getExtendsExtendsParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionPoint__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtensionPointAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getExtensionPointAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Includes__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludesAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getIncludesAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Includes__RulesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludesAccess().getRulesIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getIncludesAccess().getRulesIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Extends__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendsAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getExtendsAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Extends__RulesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendsAccess().getRulesIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getExtendsAccess().getRulesIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getActorAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__InheritancesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getInheritancesInheritanceParserRuleCall_2_0()); }
	ruleInheritance{ after(grammarAccess.getActorAccess().getInheritancesInheritanceParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__UsesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getUsesUsesParserRuleCall_3_0()); }
	ruleUses{ after(grammarAccess.getActorAccess().getUsesUsesParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Inheritance__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInheritanceAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getInheritanceAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Uses__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsesAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getUsesAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Uses__MultiplicityAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsesAccess().getMultiplicityMultiplicityParserRuleCall_2_0()); }
	ruleMultiplicity{ after(grammarAccess.getUsesAccess().getMultiplicityMultiplicityParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


